<?xml version='1.0'?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- WARNING: This is an autogenerated file -->

<sqlMap namespace="${table.pascalName}">

	<resultMap class="${modelPkg}.${table.pascalName}" id="${table.lowerName}-result" >
#foreach ($field in $table.fields)
		<result property="${field.camelName}" column="${field.name}" />
#end
	</resultMap>

	<sql id="selectSql">
		<![CDATA[
			SELECT ${table.selectBody} FROM ${table.tableName}
		]]>
	</sql>

	<select id="get" parameterClass="${table.priKey.type.toLowerCase()}" resultMap="${table.lowerName}-result" >
		<include refid="selectSql"/>
		where ${table.priKey.name} = #${table.priKey.camelName}# 
	</select>

	<select id="getList" parameterClass="map" resultMap="${table.lowerName}-result" >
		<include refid="selectSql"/>
		<dynamic prepend=" where ${table.priKey.name} in ">
			<isNull> (-999) </isNull>
			<isNotNull>
				<isEmpty> (-999) </isEmpty>
				<isNotEmpty>
					<iterate property="list" open="(" close=")" conjunction=",">
						 #list[]#  
					</iterate>
					 order by find_in_set(${table.priKey.name} , #idstr#) 
				</isNotEmpty>
			</isNotNull>
		</dynamic>
	</select>

	<select id="getMap" parameterClass="list" resultMap="${table.lowerName}-result" >
		<include refid="selectSql"/>
		<dynamic prepend=" where ${table.priKey.name} in ">  
			<isNull> (-999) </isNull> 
			<isNotNull>
				<isEmpty> (-999) </isEmpty>
				<isNotEmpty>
					<iterate property="list" open="(" close=")" conjunction=",">
						 #[]# 
					</iterate> 
				</isNotEmpty> 
			</isNotNull> 
		</dynamic> 
	</select> 

	<select id="getAll" resultMap="${table.lowerName}-result" >
		<include refid="selectSql"/>
	</select>

	<update id="update" parameterClass="${modelPkg}.${table.pascalName}" >
		UPDATE ${table.tableName} 
		<dynamic prepend="set"> 
#foreach ($field in $table.fields) 
#if(!$field.isPriKey)
			<isNotNull prepend="," property="${field.camelName}">
				  ${field.name} = #${field.camelName}#  
			</isNotNull>
#end 			
#end
		</dynamic> 
		where ${table.priKey.name} = #${table.priKey.camelName}# 
	</update>

	<insert id="insert" parameterClass="${modelPkg}.${table.pascalName}" >
		<![CDATA[
			insert into ${table.tableName} (${table.insertBody}) 
			values(${table.insertValueBody}) 
		]]>
#if($table.priKey.isAutoIncrement)
		<selectKey resultClass="${table.priKey.type.toLowerCase()}" keyProperty="${table.priKey.camelName}">
			select last_insert_id();
		</selectKey>
#end
	</insert>

	<delete id="delete" parameterClass="${table.priKey.type.toLowerCase()}" >
		<![CDATA[
			delete from ${table.tableName} where ${table.priKey.name} = #${table.priKey.camelName}#
		]]>
	</delete>

</sqlMap>